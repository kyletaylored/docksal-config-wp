#!/bin/bash

# This is a shared configuration file that is intended to be stored in the project repo.
# To override a variable locally:
# - create .docksal/docksal-local.env file and local variable overrides there
# - add .docksal/docksal-local.env to .gitignore

# Use the default Docksal stack
DOCKSAL_STACK=default

# Lock images versions for LAMP services
# This will prevent images from being updated when Docksal is updated
#WEB_IMAGE='docksal/web:x.x-apache2.4'
#DB_IMAGE='docksal/db:x.x-mysql-5.6'
#CLI_IMAGE='docksal/cli:x.x-php7.1'

# Docksal configuration.
#VIRTUAL_HOST=wordpress.docksal
#DOCROOT=docroot

# MySQL settings.
MYSQL_ROOT_PASSWORD=root
MYSQL_USER=user
MYSQL_PASSWORD=user
MYSQL_DATABASE=default
# MySQL will be exposed on a random port. Use "fin ps" to check the port.
# To have a static MySQL port assigned, copy the line below into the .docksal/docksal-local.env file
# and replace the host port "0" with a unique host port number (e.g. MYSQL_PORT_MAPPING='33061:3306')
MYSQL_PORT_MAPPING='0:3306'

# Enable/disable xdebug
# To override locally, copy the two lines below into .docksal/docksal-local.env and adjust as necessary
XDEBUG_ENABLED=0

# Wordpress settings
WP_ADMIN_USER=admin
WP_ADMIN_PASS=admin
WP_ADMIN_EMAIL=info@example.com

# These settings should be stored in a docksal-local.env file as they're unique to each project.
TERMINUS_SITE="my_site"  # Name of the Pantheon site to run tests on, e.g. my_site
TERMINUS_ENV="dev" # Default environment to sync from.
TERMINUS_MACHINE_TOKEN="" # Machine token to authenticate with Pantheon.

#-------------------------- Settings --------------------------------

# PROJECT_ROOT is passed from fin.
# The following variables are configured in the '.env' file: DOCROOT, VIRTUAL_HOST.
DOCROOT=""
DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
WEBROOT="/var/www"

#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo_red () { echo -e "${red}$1${NC}"; }
echo_green () { echo -e "${green}$1${NC}"; }
echo_green_bg () { echo -e "${green_bg}$1${NC}"; }
echo_yellow () { echo -e "${yellow}$1${NC}"; }

is_windows ()
{
	local res=$(uname | grep 'CYGWIN_NT')
	if [[ "$res" != "" ]]; then
		return 0
	else
		return 1
	fi
}

#-------------------------- END: Helper functions --------------------------------